{"version":3,"file":"static/js/596.911977c7.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const courses = [\n  {\n    title: 'Introduction to Computer Science',\n    number: 'CPSC 201',\n    link: 'https://zoo.cs.yale.edu/classes/cs201/',\n    university: 'Yale',\n  },\n  {\n    title: 'Mathematical Tools for Computer Science',\n    number: 'CPSC 202',\n    link: 'http://cs.yale.edu/homes/aspnes/classes/202/notes.pdf',\n    university: 'Yale',\n  },\n  {\n    title: 'Data Structures and Programming Techniques',\n    number: 'CPSC 223',\n    link: 'https://www.cs.yale.edu/homes/aspnes/classes/223/notes.html',\n    university: 'Yale',\n  },\n  {\n    title: 'Introduction to Systems Programming and Computer Organization',\n    number: 'CPSC 323',\n    link:\n      'https://zoo.cs.yale.edu/classes/cs323/',\n    university: 'Yale',\n  },\n  {\n    title: 'Algorithms',\n    number: 'CPSC 365',\n    link: 'https://zoo.cs.yale.edu/classes/cs365/s2020/index.html',\n    university: 'Yale',\n  },\n  {\n    title: 'Intermediate Microeconomics',\n    number: 'ECON 121',\n    link: 'http://catalog.yale.edu/ycps/courses/econ/',\n    university: 'Yale',\n  },\n  {\n    title: 'Introduction to Data Analysis and Econometrics',\n    number: 'ECON 117',\n    link: 'http://catalog.yale.edu/ycps/courses/econ/',\n    university: 'Yale',\n  },\n  {\n    title: 'Economics of Energy and Climate Change',\n    number: 'ECON 331',\n    link: 'http://catalog.yale.edu/ycps/courses/econ/',\n    university: 'Yale',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'Yale University',\n    degree: 'B.S. Computer Science & Economics, Data Science Certificate',\n    link: 'https://yale.edu',\n    year: 2025,\n  },\n  {\n    school: 'Loyola High School',\n    degree: 'High School Diploma, Valedictorian',\n    link: 'https://loyolahs.edu',\n    year: 2021,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Yale University',\n    position: 'Undergraduate Learning Assistant',\n    link: 'https://cpsc.yale.edu/',\n    location: 'New Haven, CT',\n    daterange: '2022-Present',\n    points: [\n      'Hosted office hours and led review sessions to support students in their understanding of course material for CS 201: Introduction to Computer Science (taught in Racket)',\n      'Graded exams and provided feedback to students on their performance',\n    ],\n  },\n  {\n    company: 'Student Technology Collaborative',\n    position: 'Student Technician Coordinator',\n    link: 'https://studenttechnology.yale.edu/student-resources/about-stc',\n    location: 'New Haven, CT',\n    daterange: '2021-Present',\n    points: [\n      'Diagnose and repair the personal computers of Yale students through online chat and hardware work',\n      'Work with a team of 4 students to specifically manage the cases of ~1000 Yale graduate students, ensure proper repair on or ahead of schedule, and communicate progress with clients',\n      'Led the redesign and restructuring efforts of company social media pages',\n    ],\n  },\n  {\n    company: 'Code Haven',\n    position: 'Treasurer',\n    link: 'http://codehavenyale.org/',\n    location: 'New Haven, CT',\n    daterange: '2021-Present',\n    points: [\n      'Teach a group of 6 low-income students fundamental programming skills and video game design through Scratch',\n      'Assist in classroom management and delegation of tasks to 4 other student volunteers to streamline operations',\n    ],\n  },\n  {\n    company: 'Accenture',\n    position: 'Learning2Lead Summer Intern',\n    link: 'https://www.accenture.com/us-en',\n    location: 'Los Angeles, CA',\n    daterange: '2021',\n    points: [\n      'Won 1st place at the Accenture Virtual Innovation Symposium (of 30+ groups and 200+ interns) by leading 6 interns to create a group presentation and technical proof of concept on limiting food waste at scale for Accenture leadership',\n      'Developed proficiency in data visualization, professional communication, design thinking, and consumer marketing',\n    ],\n  },\n  {\n    company: 'Pioneer Global Research Program',\n    position: 'Computer Science Researcher',\n    link: 'https://pioneeracademics.com/',\n    location: 'Los Angeles, CA',\n    daterange: '2020',\n    points: [\n      'Conducted individual academic research on algorithm analysis with Hamilton College Computer Science Professor David Perkins (dperkins@hamilton.edu).',\n      'Wrote a 19-page thesis on bead sort, a modern, natural sorting algorithm based on gravity; analyzed its history, use cases, strengths, and weaknesses, along with creating a real-time musical representation of the algorithm using Orca.',\n    ],\n  },\n  {\n    company: 'FIRST Robotics Team 3408: cyberCubs',\n    position: 'Code and Marketing Lead',\n    link: 'https://www.loyolahs.edu/studentlife/student-activities/robotics/',\n    location: 'Los Angeles, CA',\n    daterange: '2018-2021',\n    points: [\n      'Developed new code (Java) leading to an all-time high regional placement: 4th place (of 44); up from previous 33rd',\n      'Doubled active club membership by managing a 5 person marketing team to rebrand the team name and logo, rebuild the website, and develop digital marketing materials on social media',\n    ],\n  },\n  {\n    company: 'UCLA Anderson School of Management: Riordan Scholars Program',\n    position: 'Vice President',\n    link: 'https://www.anderson.ucla.edu/specialized-academic-programs/riordan-programs/riordan-scholars-program',\n    location: 'Los Angeles, CA',\n    daterange: '2018-2021',\n    points: [\n      'Co-managed a 12-person leadership team responsible for social media, community events, networking, and other projects.',\n      'Won first place (of 6 senior teams) in the Ziman Real Estate Competition.',\n      'Managed site visits to company sponsors (Google, Airbnb, etc).',\n    ],\n  },\n];\n\nexport default positions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\n// import Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\n// import { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  // 'Skills',\n  'Courses',\n  'References',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Justin Dominic's Resume. Yale University, Student Technology Collaborative, Accenture, Yale Computer Society.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      {/* <Skills skills={skills} categories={categories} /> */}\n      <Courses data={courses} />\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","company","position","daterange","points","point","Experience","job","Course","last","number","title","getRows","courses","sort","a","b","ret","university","course","idx","length","Courses","to","location","sections","Main","description","sec","toLowerCase","degrees","positions"],"sourceRoot":""}